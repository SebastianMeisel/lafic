% Standard 

Introduction to LaFiC

LaFiC means layout and format in comments, as all layout and
format information is put into comment lines. So layout and
content are fully separated. For details see Writing Text in LaFiC.
% fully: emphasize
% layout…comments: italic 
% Writing…LaFiC: see: Writing

Why LaFiC

I've been working with LaTeX / XeLaTeX for many years
now. Mostly I'm writing prose (no math at all). I often
found it disturbing, that I'm forced to create a preamble
instead of just start writing.

I started using markdown / multimarkdown. Being quite
inflexible it didn't convince me either. Also I didn't like
the cryptic syntax so much. The LaTeX output was quite
cryptic as well.

The I remembered my father saying, he'd like to be able to
just start writing as with his old typewriter only with a
better formating to end with.

Last but not least I was thinking a lot about how the layout
and formation of a text could be cleaner separated from the
content.

With LaFiC I can start writing without a thought about the
Layout. Still I get a well structured HTML or (Xe)LaTeX
document, that I can further render to PDF.
% (X…TeX: footnote: The standard templates for LaFiC are all based on XeLaTeX to support UTF-8. Still using LaTeX should be possible.

When I'm ready with writing, I can start formatation by
adding human readable comments, beeing my own lector.

% heading2
Installation and Usage

Prerequisites

LaFiC requires Perl > 5.10.1 (tested with Perl 5.26.1).

The standard templates require a resent XeLaTeX installation
with a least graphicx, hyperref, microtype and xspace.

The Gnu Emacs lisp files where tested with Gnu Emacs 25.2.2.

lafic2pdf also requires latexmk (tested with version 4.41).
% lafic2pdf: mono

Installation
% label = installation 

Get source from github using:
% github: link: https://github.com

% verbatim
git clone https://github.com/SebastianMeisel/lafic.git

Add lafic directory to $PATH, e.g.:

% verbatim
export PATH=${PATH}:~/lafic

See lafic-mode.el for installation instructions, if you want
to use in in Gnu Emacs.
% lafic…el: mono
% Gnu…Emacs: footnote: GNU Emacs is available as free Software under a GNU General Public License for most modern operating systems (Unix, GNU/Linux, macOS und Windows). 


Usage

For now the LaFiC distribution consists of three scripts
that you call with the name of the LaFiC file.

% verbatim
# lafic2html Datei.lafic
# lafic2tex Datei.lafic
# lafic2pdf Datei.lafic

The last of these is a bash script, first calling lafic2tex
and then latexmk.
% lafic2tex: mono
% latexmk: mono

Calling these three script would result in the following
files:

% verbatim
Datei.html
Datei.tex
Datei.pdf

LaFiC major mode in GNU Emacs

After installing and activation lafic-mode.el (see
Installation), the LaFiC major mode is activated on opening
any file with a *.lafic extension. 
% lafic…el: mono
% Installation: see: installation 
% *…lafic: mono

This gives you basic syntax highlighting and some keyboard
shortcuts with a C-c prefix. The shortcuts are similar to
those used in AUCTeX.
% C-c: mono

% heading2
Writing text in LaFiC
% label = Writing

Lines and paragraphs

The content is presented in two forms, which also include
the most basic layout: There are lines and paragraphs.
% lines: emphasize
% paragraphs: emphasize


The difference is not so much the length, but lines include
none of the punctation marks ».«, »?«, »!«, »:«. If no
further layout information is provided, these are
interpreted as headings.
% »…«: emphasize


The first line is interpreted as the title and presented as
this is as <h1>, when converted to Html, and \title, when 
converted to LaTeX.
% first (line is interpreted): emphasize
% the (title): emphasize

Further line will be converted to <h3> (Html) or \section
(LaTeX), if no otherwise specified.  

This way simple Documents may be structured with no explicit
layout information at all.

Comments

You can add comments to your text, by starting a single line
or each line of a paragraph with a % char with no leading
spaces. These lines or paragraphs must, however, be
separated by empty line from the content.
% no…spaces: bold
% (each) line : emphasize


% verbatim
  % This is a comment.

% verbatim
  % This is a longer comment, that spreads over several
  % lines. It is important that it is not connected to a line
  % of the general content.

"It is recommended, however, to start comments with two % chars.
Else there may occur 'problems', when there" is a »:« somewhere
in the comment. You also can start a longer comment this way
and don't need to repeat it 'in every' line.

% verbatim
  %% This is a comment! No mistake!
  Even when you go on with no leading % it's still a comment.

%% This is a comment! No mistake!
Even when you go on with no leading % it's still a comment.

Formated paragraphs 

Paragraphs can be formated by adding a line before the
paragraph, that starts with a % char, followed by a single
word. There are some predefined keywords, like quote or
quotation for – well a quotation.

% verbatim
  % quote
  This is a quotation.

% quote
This is a quotation.


If the keyword is unknown, it will be converted to an environment
name in LaTeX or the name of a <div> in Html.

Formated lines

Line are formated in the same way, only they are converted
to macros (LaTeX) oder <span> names (HTML). Know keywords
are H1 … H6 for headings. 


% verbatim
  % heading4
  This is a subsection


% heading4
This is a subsection

Inline formation

If you want to format words or sequences in a paragraph (or
line if needed), you add format lines with a leading % after
a paragraph. It has two parts:

% enumerate
* the word or the sequence to be formated in the form
  start…end. 
- a keyword.

The both are separated by a »:«.


Known environment keywords are e.g. quote or quotation.

If the keyword is unknown, it is converted to a macro
(LaTeX) oder <span> (HTML) name.

Lists

Lists are the only things, that need some kind of
markup. You have to start each topic of the list with one of
the following chars: –, *, +, -. It doesn't matter, which one you
choose. You may indent the lines, but that has no influence
on the layout.  
% –…- : mono

% verbatim
* Top 1.
- Top 2.

* Top 1.
- Top 2.

For multilevel lists, you have to choises, to raise or
decrease the level: The clean LaFiC style would be,
to start a new paragraph and add the keyword »% level+«
or »% level-« at the end.
% »…«: mono

% verbatim
  * Top 1.
  * Top 2.

% verbatim
  * Top 2a.
  * Top 2b.
  % level+

* Top 1.
* Top 2.

  * Top 2a.
  * Top 2b.
% level+

Or you can write the list in one paragraph, marking the
raise or decrease of the level with a > or < at the
beginning of a single line.

% verbatim
  * Top 1.
  * Top 2.
  >
    * Top 2a.
    * Top 2b.
  <
  * Top 3

* Top 1.
* Top 2.
>
  * Top 2a.
  - Top 2b.
<
* Top 3

Images

The simplest way to put an image into a LaFiC file is a
line with the image name, with a know extention: png, jpg,
jpeg, gif.

% verbatim
  Image.png
  % height = 40%


Image.png
% height = 40%

Note that this will not put an figure environment in LaTeX
files, so the image won't float this way. For this to
achieve to have to put % image, %img or %figure before the
line. You don't need the extention then.

% verbatim
  %image
  Image.png
  % width = 40%
  % caption = "Moon and Mars"

%image
Image.png
% width = 40%
% caption = "Moon and Mars"